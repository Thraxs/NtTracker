<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Surnames" xml:space="preserve">
    <value>Surnames</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="BirthType" xml:space="preserve">
    <value>Birth type</value>
  </data>
  <data name="BirthType_Cesarean" xml:space="preserve">
    <value>Cesarean</value>
  </data>
  <data name="BirthType_Eutocic" xml:space="preserve">
    <value>Eutocic</value>
  </data>
  <data name="BirthType_Forceps" xml:space="preserve">
    <value>Forceps</value>
  </data>
  <data name="Ph" xml:space="preserve">
    <value>pH</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="CprType" xml:space="preserve">
    <value>CPR Type</value>
  </data>
  <data name="Apgar" xml:space="preserve">
    <value>Apgar</value>
  </data>
  <data name="Lethargy" xml:space="preserve">
    <value>Lethargy</value>
  </data>
  <data name="Stupor" xml:space="preserve">
    <value>Stupor</value>
  </data>
  <data name="Coma" xml:space="preserve">
    <value>Coma</value>
  </data>
  <data name="AlteredTone" xml:space="preserve">
    <value>Altered tone</value>
  </data>
  <data name="AlteredReflexes" xml:space="preserve">
    <value>Altered reflexes</value>
  </data>
  <data name="AlteredSuction" xml:space="preserve">
    <value>Altered suction</value>
  </data>
  <data name="PersonalData" xml:space="preserve">
    <value>Personal data</value>
  </data>
  <data name="PerinatalData" xml:space="preserve">
    <value>Perinatal data</value>
  </data>
  <data name="ConciousnessData" xml:space="preserve">
    <value>Altered state of consciousness</value>
  </data>
  <data name="EditPatientData" xml:space="preserve">
    <value>Edit patient data</value>
  </data>
  <data name="DeletePatient" xml:space="preserve">
    <value>Delete patient</value>
  </data>
  <data name="BirthDateFrom" xml:space="preserve">
    <value>Birth date from</value>
  </data>
  <data name="BirthDateTo" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter patients</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Nhc" xml:space="preserve">
    <value>NHC</value>
  </data>
  <data name="Nuhsa" xml:space="preserve">
    <value>NUHSA</value>
  </data>
  <data name="NhcDesc" xml:space="preserve">
    <value>Clinic History Number</value>
  </data>
  <data name="NuhsaDesc" xml:space="preserve">
    <value>Andalusia Unique Health History Number</value>
  </data>
  <data name="AdministrativeData" xml:space="preserve">
    <value>Administrative data</value>
  </data>
  <data name="IdDesc" xml:space="preserve">
    <value>Tracking number</value>
  </data>
  <data name="RegistrantName" xml:space="preserve">
    <value>Registrant</value>
  </data>
  <data name="PatientStatus_Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="PatientStatus_Hypothermia" xml:space="preserve">
    <value>Hypothermia</value>
  </data>
  <data name="PatientStatus_Monitoring" xml:space="preserve">
    <value>Monitoring</value>
  </data>
  <data name="PatientStatus_NbrSurveillance" xml:space="preserve">
    <value>NBR Surveillance</value>
  </data>
  <data name="PatientStatus_NormalDesc" xml:space="preserve">
    <value>The patient is in a good state or not enough info has been introduced yet.</value>
  </data>
  <data name="PatientStatus" xml:space="preserve">
    <value>Patient status</value>
  </data>
  <data name="PatientStatus_HypothermiaDesc" xml:space="preserve">
    <value>The patient shows signs of moderate/severe HIE. Check the Hypothermia section.</value>
  </data>
  <data name="PatientStatus_NbrSurveillanceDesc" xml:space="preserve">
    <value>The patient passes the NBR criteria. Check the NBR Surveillance section.</value>
  </data>
  <data name="PatientStatus_MonitoringDesc" xml:space="preserve">
    <value>The patient shows signs of mild HIE. Check the Monitoring section.</value>
  </data>
  <data name="ChangeHistory" xml:space="preserve">
    <value>Changelog</value>
  </data>
  <data name="DeleteTitle" xml:space="preserve">
    <value>Delete confirmation</value>
  </data>
  <data name="DeleteDescription" xml:space="preserve">
    <value>All the information related to this patient will be irreversibly removed from the system. Are you sure you want to delete this patient?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit patient</value>
  </data>
  <data name="BirthType_Ventouse" xml:space="preserve">
    <value>Ventouse</value>
  </data>
  <data name="BirthType_Spatulas" xml:space="preserve">
    <value>Spatulas</value>
  </data>
  <data name="PatientStatus_ClosedDesc" xml:space="preserve">
    <value>This patient's tracking is closed and has to be opened to be modified.</value>
  </data>
  <data name="PatientStatus_Closed" xml:space="preserve">
    <value>Filed</value>
  </data>
  <data name="OpenTracking" xml:space="preserve">
    <value>Reopen tracking</value>
  </data>
  <data name="CloseTracking" xml:space="preserve">
    <value>File patient</value>
  </data>
  <data name="CloseTitle" xml:space="preserve">
    <value>Close tracking confirmation</value>
  </data>
  <data name="OpenTitle" xml:space="preserve">
    <value>Reopen tracking confirmation</value>
  </data>
  <data name="CloseDescription" xml:space="preserve">
    <value>The tracking for this patient will be closed and the status of the patient will no longer be taken into account by the system. This should be done if the patient no longer needs to be tracked by this application because he was either dicharged or any other reason. </value>
  </data>
  <data name="OpenDescription" xml:space="preserve">
    <value>The tracking for this patient will be open again and the status of the patient will be taken into account by the system again. Are you sure you want to open the tracking of this patient?</value>
  </data>
  <data name="CloseDescription2" xml:space="preserve">
    <value>You can open again this tracking at any time. Are you sure you want to close the tracking of this patient?</value>
  </data>
  <data name="OtherData" xml:space="preserve">
    <value>Other data</value>
  </data>
  <data name="CprType_1" xml:space="preserve">
    <value>Type 1</value>
  </data>
  <data name="CprType_2" xml:space="preserve">
    <value>Type 2</value>
  </data>
  <data name="CprType_3" xml:space="preserve">
    <value>Type 3</value>
  </data>
  <data name="CprType_4" xml:space="preserve">
    <value>Type 4</value>
  </data>
  <data name="CprType_5" xml:space="preserve">
    <value>Type 5</value>
  </data>
  <data name="LastStatus" xml:space="preserve">
    <value>Last status</value>
  </data>
  <data name="LastStatusDesc" xml:space="preserve">
    <value>Status of the patient at the time of filing.</value>
  </data>
  <data name="ExportedFileName" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="ExportData" xml:space="preserve">
    <value>Export results to spreadsheet</value>
  </data>
  <data name="ExportInfo" xml:space="preserve">
    <value>Generating spreadsheet... </value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ExportInfo2" xml:space="preserve">
    <value>Note: There is a limit to the amount of patients to export at once. If you reach this limit modify the filter to obtain an smaller result set.</value>
  </data>
  <data name="PatientSex_Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="PatientSex_Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="PatientSex" xml:space="preserve">
    <value>Sex</value>
  </data>
</root>